{
  "info": {
    "name": "Order Execution Engine API",
    "description": "Collection for testing the Order Execution Engine with DEX routing and WebSocket status updates",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      },
      "response": []
    },
    {
      "name": "Create Market Order",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"type\": \"market\",\n  \"tokenIn\": \"SOL\",\n  \"tokenOut\": \"USDC\",\n  \"amountIn\": 100,\n  \"userId\": \"user123\",\n  \"slippageTolerance\": 0.01\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/orders/execute",
          "host": ["{{baseUrl}}"],
          "path": ["api", "orders", "execute"]
        }
      },
      "response": []
    },
    {
      "name": "Create Limit Order",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"type\": \"limit\",\n  \"tokenIn\": \"SOL\",\n  \"tokenOut\": \"USDC\",\n  \"amountIn\": 50,\n  \"amountOut\": 5000,\n  \"userId\": \"user456\",\n  \"slippageTolerance\": 0.005\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/orders/execute",
          "host": ["{{baseUrl}}"],
          "path": ["api", "orders", "execute"]
        }
      },
      "response": []
    },
    {
      "name": "Create Sniper Order",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"type\": \"sniper\",\n  \"tokenIn\": \"SOL\",\n  \"tokenOut\": \"USDC\",\n  \"amountIn\": 200,\n  \"userId\": \"user789\",\n  \"slippageTolerance\": 0.02\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/orders/execute",
          "host": ["{{baseUrl}}"],
          "path": ["api", "orders", "execute"]
        }
      },
      "response": []
    },
    {
      "name": "Get Order Status",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/orders/{{orderId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "orders", "{{orderId}}"],
          "variable": [
            {
              "key": "orderId",
              "value": "replace-with-actual-order-id",
              "description": "Order ID from create order response"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get User Orders",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/orders/user/{{userId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "orders", "user", "{{userId}}"],
          "variable": [
            {
              "key": "userId",
              "value": "user123",
              "description": "User ID to fetch orders for"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get Active Orders",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/orders/active",
          "host": ["{{baseUrl}}"],
          "path": ["api", "orders", "active"]
        }
      },
      "response": []
    },
    {
      "name": "Get Queue Statistics",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/orders/queue/stats",
          "host": ["{{baseUrl}}"],
          "path": ["api", "orders", "queue", "stats"]
        }
      },
      "response": []
    },
    {
      "name": "Test Invalid Order (Validation Error)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"type\": \"invalid_type\",\n  \"tokenIn\": \"\",\n  \"tokenOut\": \"USDC\",\n  \"amountIn\": -100,\n  \"userId\": \"\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/orders/execute",
          "host": ["{{baseUrl}}"],
          "path": ["api", "orders", "execute"]
        }
      },
      "response": []
    },
    {
      "name": "Test Order with Failure Simulation",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"type\": \"market\",\n  \"tokenIn\": \"INVALID_TOKEN\",\n  \"tokenOut\": \"USDC\",\n  \"amountIn\": 100,\n  \"userId\": \"test-user\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/orders/execute",
          "host": ["{{baseUrl}}"],
          "path": ["api", "orders", "execute"]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set dynamic order ID for testing",
          "if (pm.info.requestName === 'Get Order Status') {",
          "    pm.variables.set('orderId', 'test-order-id-' + Date.now());",
          "}"
        ]
      }
    }
  ]
}

